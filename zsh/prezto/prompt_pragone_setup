ZSH_THEME_GIT_PROMPT_PREFIX=" on %F{magenta}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%F{reset_color}"
ZSH_THEME_GIT_PROMPT_DIRTY="%F{green}!"
ZSH_THEME_GIT_PROMPT_UNTRACKED="%F{green}?"
ZSH_THEME_GIT_PROMPT_CLEAN=""
export LSCOLORS="Gxfxcxdxbxegedabagacad"
#export LS_COLORS="di=1;31:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:"
# ZSH_THEME_GIT_PROMPT_PREFIX="git:(%F{red}"
# ZSH_THEME_GIT_PROMPT_SUFFIX="%F{reset_color}"
# ZSH_THEME_GIT_PROMPT_DIRTY="%F{blue}) %F{yellow}✗%F{reset_color}"
# ZSH_THEME_GIT_PROMPT_CLEAN="%F{blue})"

function prompt_pragone_precmd {
  BATTERY_CHARGE="$(battery_charge)"
  PROMPT_CHAR="$(prompt_char)"
}

function collapse_pwd {
  echo $(pwd | sed -e "s,^$HOME,~,")
}

function battery_charge {
    echo `$BAT_CHARGE` 2>/dev/null
}

function prompt_char() {
  if `git branch >/dev/null 2>/dev/null`; then 
    echo '±'
  else
    if `hg root >/dev/null 2>/dev/null`; then
      echo '☿'
    else
      echo '○'
    fi
  fi
}

function rvm_info {
    command -v rvm-prompt >/dev/null 2>&1 && printf "%s" " $(rvm-prompt) "
}

function git_prompt_info() {
  if [[ "$(command git config --get oh-my-zsh.hide-status 2>/dev/null)" != "1" ]]; then
    ref=$(command git symbolic-ref HEAD 2> /dev/null) || \
    ref=$(command git rev-parse --short HEAD 2> /dev/null) || return 0
    echo "$ZSH_THEME_GIT_PROMPT_PREFIX${ref#refs/heads/}$(parse_git_dirty)$ZSH_THEME_GIT_PROMPT_SUFFIX"
  fi
}

# Checks if working tree is dirty
parse_git_dirty() {
  local STATUS=''
  local FLAGS
  FLAGS=('--porcelain')
  if [[ "$(command git config --get oh-my-zsh.hide-dirty)" != "1" ]]; then
    if [[ $POST_1_7_2_GIT -gt 0 ]]; then
      FLAGS+='--ignore-submodules=dirty'
    fi
    if [[ "$DISABLE_UNTRACKED_FILES_DIRTY" == "true" ]]; then
      FLAGS+='--untracked-files=no'
    fi
    STATUS=$(command git status ${FLAGS} 2> /dev/null | tail -n1)
  fi
  if [[ -n $STATUS ]]; then
    echo "$ZSH_THEME_GIT_PROMPT_DIRTY"
  else
    echo "$ZSH_THEME_GIT_PROMPT_CLEAN"
  fi
}


function prompt_pragone_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # autoload -Uz add-zsh-hook
  # autoload -Uz vcs_info

  COLLAPSE_PWD=$(pwd | sed -e "s,^$HOME,~,")
  # PROMPT="%{$fg[magenta]%}%n%${reset_color%}@%{$fg[yellow]%}%m%{$reset_color%}:%{$fg_bold[green]%}$(collapse_pwd)%{$reset_color%}$(hg_prompt_info)$(git_prompt_info)$(rvm_info)$(prompt_char) "
  if [[ "$(uname)" == 'Darwin' ]]; then
    PROMPT="%F{magenta}%n%F{reset_color}@%F{yellow}%m%F{reset_color}:%B%F{green}"'$(collapse_pwd)'"%b%F{reset_color}"'$(git_prompt_info)'""'$(rvm_info)'""'$(prompt_char)'" "
  elif [[ "$(uname)" == 'Linux' ]]; then
    PROMPT="%F{magenta}%n%F{reset}@%F{yellow}%m%F{reset}:%B%F{green}"'$(collapse_pwd)'"%b%F{reset}"'$(git_prompt_info)'""'$(rvm_info)'""'$(prompt_char)'" "
  fi
  RPROMPT='$(battery_charge)'
}

prompt_pragone_setup "$@"

